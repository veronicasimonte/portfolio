/* 
display: grid e display: flex sono entrambi proprietÃ  che si possono dare al layout della pagina, ma esse usano un approccio diverso

Le differenze tra di loro:

    Modello di Layout:
        Flexbox (display: flex): Ãˆ un sistema di layout unidimensionale, il che significa che gestisce gli elementi in una riga o in una colonna. Ãˆ adatto per disporre gli elementi lungo un solo asse, orizzontalmente o verticalmente.
        Grid (display: grid): Ãˆ un sistema di layout bidimensionale, che consente di creare layout con sia righe che colonne. Ãˆ piÃ¹ versatile per la creazione di layout complessi basati su griglie.

    Orientamento:
        Flexbox: Utilizzato principalmente per creare layout in una singola dimensione, sia come riga che come colonna.
        Grid: Consente sia righe che colonne, fornendo un layout bidimensionale.

    **Differenza principale** Allineamento degli Elementi Figli:
        Flexbox: Tratta l'allineamento degli elementi lungo l'asse principale (per righe o colonne).
        Grid: Consente l'allineamento sia nella direzione delle righe che delle colonne in modo indipendente.

    Ordinamento:
        Flexbox: La proprietÃ  order consente di controllare l'ordine in cui gli elementi flessibili appaiono nel contenitore flessibile.
        Grid: La proprietÃ  order non viene utilizzata nei layout della griglia. Invece, Ã¨ possibile controllare l'ordine utilizzando la proprietÃ  grid-template-areas o posizionando gli elementi in linee di griglia specifiche.

    Comportamento Predefinito:
        Flexbox: Gli elementi in un contenitore flessibile cercheranno, per impostazione predefinita, di adattarsi a una singola riga.
        Grid: Gli elementi in un contenitore della griglia cercheranno, per impostazione predefinita, di riempire lo spazio disponibile sia nelle righe che nelle colonne.

    Casi d'Uso:
        Flexbox: Ideale per disporre gli elementi in una singola riga o colonna, come menu di navigazione, barre degli strumenti o elementi all'interno di un contenitore flessibile.
        Grid: Adatto per creare layout complessi con righe e colonne, come layout di intere pagine o componenti con design strutturati basati su griglie.

    Annidamento:
        Flexbox: Ãˆ possibile annidare contenitori flessibili l'uno dentro l'altro.
        Grid: Ãˆ possibile annidare contenitori della griglia l'uno dentro l'altro, consentendo layout piÃ¹ intricati e modulari.

In molti casi, queste tecniche di layout non sono mutualmente esclusive e possono essere utilizzate insieme per ottenere design piÃ¹ complessi. Spesso, Flexbox viene utilizzato all'interno degli elementi della griglia o in combinazione con layout della griglia per gestire esigenze di layout su piccola scala all'interno di design piÃ¹ ampi e strutturati basati su griglie.
*/

/* In questo foglio di stile attuo un mobile first approach => smartphone, tablets, larger screens */

/* ---- variabili ---- */
:root{
  --menu-bg: #000; 
  --header-color: #333;
  --secondary-color: whitesmoke;
}

/* ---- reset ---- */
/* em Ã¨ una unitÃ  scalabile, al contrario dei pixel (fixed). Questo significa che prende la misura default e la moltiplica per il numero che scelgo (es: 4em = 4xmisura di base) ---- */
h1,h2,h3,h4,h5,h6, p, ol, ul{
  margin: 0 0 1rem 0;
  padding: 0;
}

ol,ul{
  padding-left: 20px;
  line-height: 1.5;
}

li {list-style: none;}
ul {list-style-type:none;}

button {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}
img{
  height: auto;
}

h1{
  font-size: 4rem;
} 

h2{
  font-size: 3rem;
} 

h3{
  font-size: 2rem;
} 

h4{
  font-size: 1rem;
  font-weight: 100;
} 

h5{
  font-size: 0.8rem;
} 
h6{
  font-size: 0.6rem;
}
a{
  text-decoration:none;
  margin: 0.2em;
}

body, html{ 
  font-family: 'Montserrat', sans-serif; 
  line-height: 1; 
  font-size: 16px; 
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

*,*:before,*:after{ 
  box-sizing: border-box; 
}

/* ---- stili di base ----- */
html{
  scroll-behavior: smooth;
}
body{ 
  background:  var(--menu-bg); 
  color: var(--secondary-color);
  overflow-x: hidden;
  font-family: Montserrat;
}

nav {
  position: relative;
  top: 40%;
  left: 80%;  /* per decentrare */
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: row;
}

nav > a {
  color: rgb(184, 184, 184);
  font-family: "Neue Montreal", sans-serif;
  text-decoration: none;
  position: relative;
  text-transform: uppercase;
  padding: 2em 0.4em;
  font-weight: 500;
  mix-blend-mode: difference;
  text-align: center;
}

nav > a:hover {
  color: #fff;
}

nav > a > span {
  position: relative;
  z-index: 2;
  width: 400px;
}

nav a .img-wrapper {
  position: absolute;
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.5);
  transition: all 250ms;
  pointer-events: none;
  width: 300px;
  height: 400px;
  overflow: hidden;
}

nav a img {
  position: absolute;
  opacity: 0;
  top: 0;
  left: 0;
  transform: scale(2.5);
  transition: transform 2000ms cubic-bezier(0.075, 0.82, 0.165, 1.5),
    opacity 250ms;
  pointer-events: none;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

nav a:hover .img-wrapper {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

nav a:hover img {
  opacity: 1;
  transform: scale(1.5);
}
/* ---- fonts ----- */
@font-face {
  font-family: 'Montserrat'; /* ---- qui posso chiamarlo anche 'font di Veronica' ----- */
  src: url('assets/fonts/Montserrat-VariableFont_wght.ttf');
}



/* ---- ! Sistema di titoli ---- */
h1, .text-1 {font-size: 3.6rem;margin-bottom:1rem}
h2, .text-2 {font-size: 2.2rem;margin-bottom:1rem;line-height: 1;}
h3, .text-3  {font-size: 1.8rem;margin-bottom:1rem;line-height: 1.2;}
h4, .text-4 {font-size: 1.5rem;margin-bottom:1rem;line-height: 1.2;}
p{font-size: 1rem;margin-bottom:1rem; line-height: 1.5;}
.text-center{text-align: center;}



/*>>>>>>>>>>>><< Continua qui */

.header{ 
background-color: var(--menu-bg); 
color: var(--header-color);
position: fixed; 
top:0;  /* non c'Ã¨ bisogno che scriva 'margin-top' perchÃ¨ la posizione Ã¨ fixed*/
left:0; 
z-index: 9999; 
width: 100%; 
padding: 4vh 3vw; 
}
.header__content{
width: 100%;
margin: 0 auto; 
display: flex;
justify-content: space-between;
}
.header__logo{
display: flex; 
align-items: center;
color:var(--secondary-color);
font-size: 1.6em;
}
.header__menu{
padding: 0;margin: 0;
}
.header__menu li{
display: inline-block; /*visualizzazone in row*/
}
.header__menu li.underline a {
  text-decoration: line-through;
}
.header__menu li a{
color:var(--secondary-color);
opacity: 1;
display: block;
padding: 0.001vh;  /*padding elementi header da modificare*/
margin-left: 8vh;
font-size: 1.6em;
}
.header__menu li a:hover {
  text-decoration: line-through;
  text-decoration-color: #2d89fa; }

.header__menu a.underline{
  text-decoration: line-through;
}


canvas {
position: fixed;
z-index: 9999;
pointer-events: none;
}

.project-image {
opacity: 0%;
position: absolute;
top: -100%;
pointer-events: none;
user-select: none;
}

/* ! Spacer */
.spacer{height: 300px;}


/* ! Grid System  (flex + css grid) */
.grid { margin: 0 auto; padding: 4vh 2.6vw; display: flex; flex-flow: row; flex-wrap: wrap;}
.grid--center{justify-content: center;}
.col{ flex: 1;}

[class*='col-'] { position: relative;padding: 0 1vw;}

.col-20{ width: 20%; }
.col-25{ width: 25%; }
.col-30{ width: 30%; }
.col-33{ width: 33.33%; }
.col-50{ width: 50%; }
.col-67{ width: 60%; }
.col-70{ width: 70%; }
.col-80{ width: 80%; }
.col-100{ width: 100%; }


/* ! Helpers  */
.mt-0{margin-top: 0 }
.mt-1{margin-top: 10px}
.mt-2{margin-top: 20px}
.mt-3{margin-top: 40px}
.mt-4{margin-top: 100px }

.mb-0{margin-bottom: 0}
.mb-1{margin-bottom: 10px}
.mb-2{margin-bottom: 20px}
.mb-3{margin-bottom: 40px}
.mb-4{margin-bottom: 100px}

.p-0{padding: 0}
.p-1{padding: 10px}
.p-2{padding: 20px}
.p-3{padding: 40px}
.p-4{padding: 100px}

.pt-1{padding-top: 10px;}
.pt-3{padding-top: 20px;}
.pt-3{padding-top: 40px;}
.pt-4{padding-top: 15vh;}

.pb-1{padding-bottom: 10px;}
.pb-2{padding-bottom: 20px;}
.pb-3{padding-bottom: 40px;}
.pb-4{padding-bottom: 15vh;}

.text-center { text-align: center; }
.text-right { text-align: right; }
.text-left { text-align: left; }
.img-res { width: 100%; height: auto; margin-bottom: 20px;vertical-align: middle;}



/* Helpers - Utility */
.round{border-radius: 20px;}
.spacer{height: 10vh;}
.relative{position: relative;}
.overflow-h{overflow: hidden;}


.img-small{height: 270px;object-fit: cover;}
.ionicon{width: 20px;height: 20px;margin: 10px;}
.font-normal{font-weight: 400;}


/* ! Cover */
.cover{ 
text-align: center; padding:10px; min-height:600px; width:100%; 
display:flex; flex-direction:column; justify-content:center; 
background-position: center center; background-size:cover;
}
.cover * {color:#fff}

/* Hero */
.blob{position: absolute; top:-20%; left:-20%; width: 140%;z-index: -1;}
.hero{min-height: 100vh;display: flex;align-items: center;}

/* Footer */
.footer{background-color: #2d89fa;color:#fff}
.footer-bottom{background-color: #2d89fa;color:#fff; padding: 40px;text-align: center;margin-bottom: 0;}
.footer-bottom a:visited{text-decoration: none;}

/* ! Button System */
.button { 
font-size: 1rem; text-transform: uppercase; background:#2d89fa; color:#fff; 
text-decoration: none;padding: 14px 25px; display: inline-block;
border-radius: 14px; font-weight: 700;
}  

.button:hover{
background: #333; 
}

.button-small { 
font-size: 1rem; text-transform: uppercase; background: #EF6362; color:#fff; 
text-decoration: none;padding: 10px 20px; display: inline-block;
border-radius: 4px; font-weight: 700;
} 

footer a {
  text-decoration: none;
}
input[type=text], select, textarea {     /*stile form*/
  width: 100%;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
  margin-top: 6px;
  margin-bottom: 16px;
  resize: vertical;
}

input[type=submit] {
  background-color:black;
  color: white;
  padding: 12px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.button-34:hover {
  background-color: rgba(48, 47, 47, 0.706) ;
}

.button-34 {
  background: black;
  border-radius: 999px;
  box-shadow: black 0 10px 20px -10px;
  box-sizing: border-box;
  color: #FFFFFF;
  cursor: pointer;
  font-size: 16px;
  font-weight: 700;
  line-height: 24px;
  opacity: 1;
  outline: 0 solid transparent;
  padding: 8px 18px;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  width: fit-content;
  word-break: break-word;
  border: 0;
}
#icons {
  margin-left: 30px;
}  
.containerpopup{
  width: 100%;
  height: 100vh;
  background: linear-gradient(to right, #485563, #29323c);
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn{
  padding: 10px 60px;
  background: #fff;
  border: 0;
  outline: none;
  cursor: pointer;
  font-size: 22px;
  font-weight: 500;
  border-radius: 10px;
  transition: transform 0.2s;
}

.btn:active{
  transform: scale(0.95);
}

.popup{
  width: 400px;
  background: #fff;
  -webkit-border-radius: 6px;
  -moz-border-radius: 6px;
  border-radius: 6px;
  position: absolute;
  top: 0;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.1);
  text-align: center;
  padding: 0 30px 60px;
  color: #333;
  visibility: hidden;
  transition: all 0.4s ease-in-out;
}

.open-popup{
  visibility: visible;
  top: 50%;
  transform: translate(-50%, -50%) scale(1);
}

.popup img{
  width: 100px;
  margin-top: -50px;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.popup h2{
  font-size: 38px;
  font-weight: 500;
  margin: 30px 0 10px;
}

.popup button{
  width: 100%;
  margin-top: 50px;
  padding: 10px 0;
  background-color: #e02189;
  color: #fff;
  border: 0;
  outline: none;
  font-size: 18px;
  border-radius: 4px;
  box-shadow: 0 5px 5px rgba(0,0,0,0.2);
}